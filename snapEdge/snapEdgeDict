/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      snapEdgeDict;
}

snapPatches
(
    inlet
    outlet
);

snapZones
(
);

// must reside in the case directory (just create a soft-link to the stl in constant/triSurface)
stlFileNames
(
    wedge.stl walls.stl
);

// only move those points that are closer to the features than the tolerance*| edge length |
tolerance 1.9;

// 1.0 = move the points to the edge, 0 = dont move the point
// under-relaxation works better with many iterations to capture corners
relaxation 0.1;

// number of iterations to move points towards edge
nIterations 15;

// set to yes if edges inside a patch should be included
// set to no if only the edges of the patch should be moved
// in general: set this to no to get optimal mapping of inlet/outlet patches
// this ensures that wall-faces and inlet/outlet-faces are mapped to correct positions
includeInterior yes;

// the smoother tries to create faces with only orthogonal edges
// = 1, moves the point to the point which creates two orthogonal edges, =0 dont move point
smootherRelaxation 0.1;

// resolve all features with greater angle than this
featureAngle 30.0;

// do not snap edges with an angle greater than this to the feature line
excludeEdgeAngle 60;

// used when selecting between multiple edges to map to the same position
// if the angle is above this value 
//     the choice will be based on which edge has the smallest angle to feature line
// otherwise
//     the choice will be based on which edge is closest
parallelAngle 50.0;

// disallow edges to shrink below overlapFactor * smallest edge length
overlapFactor 0.1;

// allow for small overlap when fitting the edges to feature lines
fitFactor 1.0e-2;

// number of smoothing iterations
nSmootherIterations 3;

// perturb edges in a straight line outwards with distance from face center to edge times this
// (only for preventing bad faces and will move points off edge if the face has 3 consecutive points on a straight line)
straightEdgePerturbation 0.2;
